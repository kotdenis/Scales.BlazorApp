<table class="table table-success table-striped table-hover" id="journaltable" >
    <thead>
        <tr>
            <th>#</th>
            <th>Car brand</th>
            <th>Car plate</th>
            <th>Imported cargo</th>
            <th>Axles</th>
            <th>Weight</th>
            <th>Date/Time</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (TransportDtos?.Count > 0)
        {
            int num = Number;
            foreach (var dto in TransportDtos)
            {
                num += 1;
                <tr>
                    <td>@num</td>
                    <td>@dto.Brand</td>
                    <td>@dto.CarPlate</td>
                    <td>@dto.Cargo</td>
                    <td>@dto.NumberOfAxles</td>
                    <td>@dto.Weight</td>
                    <td>@string.Format("{0:g}", dto.CreatedDate)</td>
                    <td>
                        <button class="btn btn-success" style="font-weight:bold" @onclick="() => SelectTransport(dto)">Select</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<div>
    <ul class="pagination" style="margin-bottom:2vh;">
        @if (Links != null)
        {
            @foreach (var link in Links)
            {
                <li @onclick="async() => await OnSelectedPage(link)" @onclick:preventDefault @onclick:stopPropagation
                    style="cursor: pointer;" class="page-item @(link.Enabled ? null : "disabled")
                                    @(link.Active ? "active" : null)">
                    <span class="page-link" href="#">@link.Text</span>
                </li>
            }
        }
    </ul>

</div>
<style>

    .pagination {
        --bs-pagination-active-color: white !important;
        --bs-pagination-active-bg: teal !important;
        --bs-pagination-active-border-color: teal !important;
        --bs-pagination-color: teal !important;
    }
    
</style>

@code {
    [Parameter]
    public List<TransportDto> TransportDtos { get; set; } = new List<TransportDto>();
    [Parameter]
    public int Number { get; set; }
    [Parameter]
    public Action<TransportDto> SelectTransport { get; set; } = (x) => { };
    [Parameter]
    public Func<PagingLink, Task> OnSelectedPage { get; set; } = (x) => Task.CompletedTask;
    [Parameter]
    public List<PagingLink> Links { get; set; } = new List<PagingLink>();
}
