<div class="card ms-2">
  <div class="card-header fw-bold" style="background-color:teal;color:yellow;">
    Create or update transport
  </div>
  <div class="card-body">
    <EditForm Model="RefBookTransport" OnValidSubmit="ValidSubmit">
        <div>
            <DataAnnotationsValidator/>
        </div>
        <div class="d-flex flex-column">
                <label class="form-label fw-bold"><i class="fa fa-solid fa-car"></i>&nbsp;Car brand</label>
                <InputText class="form-control" @bind-Value="RefBookTransport.Brand" />
                <ValidationMessage For="() => RefBookTransport.Brand" style="color:red;" />
                <label class="form-label fw-bold"><i class="fa fa-solid fa-car-rear"></i>&nbsp;Car plate</label>
                <InputText class="form-control" @bind-Value="RefBookTransport.CarPlate" />
                <ValidationMessage For="() => RefBookTransport.CarPlate" style="color:red;" />
                <label class="form-label fw-bold"><i class="fa fa-solid fa-truck"></i>&nbsp;Number of axles</label>
                <InputNumber class="form-control" @bind-Value="RefBookTransport.NumberOfAxles" />
                <ValidationMessage For="() => RefBookTransport.NumberOfAxles" style="color:red;" />
        </div>
    </EditForm>
    <div class="d-flex flex-row mt-2">
        <button class="btn btn-success fw-bold" @onclick="async () => await CreateAsync()">Create</button>
        <button class="btn btn-warning fw-bold ms-2" @onclick="async() => await UpdateAsync()">Update</button>
        <button class="btn btn-secondary fw-bold ms-2" @onclick="() => ClearCard()">Clear</button>
    </div>
  </div>
</div>

@code {
    [Parameter]
    public RefBookTransport RefBookTransport { get; set; } = new();
    [Parameter]
    public Func<Task> CreateAsync { get; set; } = () => Task.CompletedTask;
    [Parameter]
    public Func<Task> UpdateAsync { get; set; } = () => Task.CompletedTask;
    [Parameter]
    public Action ClearCard { get; set; } = () => { };
    [Parameter]
    public EventCallback ValidSubmit { get; set; }// = () => { };
}
